#
# This file is part of Invenio.
# Copyright (C) 2016-2018 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""speedup_citations_index"""
from __future__ import absolute_import, division, print_function

from alembic import op

# revision identifiers, used by Alembic.
revision = '2dd443feeb63'
down_revision = '0bc0a6ee1bc0'
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Upgrade function which prepares data for index
    op.execute('''
        CREATE OR REPLACE FUNCTION referenced_records(json jsonb) RETURNS TEXT[] AS $$
        DECLARE
          reference_arr jsonb;
          text_val text;
          text_arr_val text[];
          ret_val text[];
        BEGIN
          FOR reference_arr IN (SELECT jsonb_array_elements(json->'references')) LOOP
            text_val := split_part(reference_arr->'record'->>'$ref',E'api/',2);
            IF text_val != '' THEN
              text_arr_val := regexp_split_to_array(text_val, E'/');
              ret_val:=array_append(ret_val, text_arr_val[2]||substring(text_arr_val[1] for 3));
            END IF;
          END LOOP;
        RETURN ret_val;
        END;
        $$ LANGUAGE plpgsql IMMUTABLE;
    ''')
    # Remove old index
    op.execute(
        'drop index if exists ix_records_metadata_json_referenced_records')
    # Create new index
    op.execute('''
        CREATE INDEX ix_records_metadata_json_referenced_records_2_0
          ON records_metadata
          USING gin(referenced_records(json))
    ''')
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        'drop index if exists ix_records_metadata_json_referenced_records_2_0')
    op.execute('drop function if exists referenced_records(json jsonb)')

    # Restore previous index
    op.execute('''
            create or replace function referenced_records(json jsonb) returns text[] as  $$
            select
                array_agg(
                    references_arr->'record'->>'$ref'
                )  as result
             from
                jsonb_array_elements(json->'references') as references_arr; $$
            language sql immutable
        ''')
    op.execute('''
            create index ix_records_metadata_json_referenced_records
                on records_metadata
                using gin(referenced_records(json))
        ''')
    # ### end Alembic commands ###
